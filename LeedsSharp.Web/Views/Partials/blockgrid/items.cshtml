@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IEnumerable<BlockGridItem>>
@{
    if (Model?.Any() != true)
    {
        return;
    }

    var blockGroups = TempData["blocksWithGroupNames"] as Dictionary<string, bool>;
    var layout = Model.Select(item => blockGroups?.GetValue(item.Content.ContentType.Key.ToString()))
        .Any(x => x == true); // Declare the layout variable outside the loop
}

<div class="@(layout ? "layout-" : "feature-")items d-flex flex-column @(layout ? "gap-0" : "gap-3")">
    @foreach (var item in Model)
    {
        var partialViewName = "blockgrid/Components/" + item.Content.ContentType.Alias;
        try
        {
            @await Html.PartialAsync(partialViewName, item)
        }
        catch (InvalidOperationException)
        {
            <p>
                <strong>Could not render component of type: @(item.Content.ContentType.Alias)</strong>
                <br/>
                This likely happened because the partial view <em>@partialViewName</em> could not be found.
            </p>
        }
    }
</div>